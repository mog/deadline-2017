@import url('https://fonts.googleapis.com/css?family=Rubik:700,500');

//@import url('https://fonts.googleapis.com/css?family=Montserrat');

@font-face {
  font-family: 'vcr_osd_monoregular';
  src: url('../assets/font/vcr_osd_mono_1.001-webfont.woff2') format('woff2'),
  url('../assets/font/vcr_osd_mono_1.001-webfont.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}

html, body {
  font-family: $font--family--base;
  font-size: $font--size;

  line-height: 1.35em;
}

::-moz-selection {
  color: #fff;
  background: $color--primary;
}

::selection {
  color: #fff;
  background: $color--primary;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $font--family--heading;
  text-rendering: optimizeLegibility;
  text-transform: uppercase;
  filter: contrast(1);
  color: #192146;
  @include phone() {
    text-align: left;
    line-height: 1em;
  }
}

h1 {
  font-size: $font--size--1;

  @include phone() {
    font-size: $font--size--1 * .8;
  }

  margin-top: 0;
  padding-top: 0.67em;
  //border-top: .01em solid;
}

h2 {
  @include phone() {
    font-size: $font--size--2 * .8;
  }

  font-size: $font--size--2;
  padding-top: 0.5em;
  margin-bottom: .5em;
  margin-left: -27px;
  //border-top: .1em solid;

  $maxRot: 3.0;
  $maxRotText:1.5;
  &::before,
  &::after {
    content: "";
    width: 100%;
    height: 80%;
    position: absolute;
    z-index: -1;
    //transform: rotate($rotation+deg);
    padding: 0;
    top: 30px;
    left: -20px;
  }

  &::after {
    width: 60%
  }

  @for $i from 1 through 15 {
    @at-root {
      section:nth-child(#{$i}) {
        h2 {
          text-indent: - random(15)+px;
          transform: translate(0, -40%) rotate((random()*$maxRotText*2)-$maxRotText+deg);
        }

        $rotation: (random()*$maxRot*2)-$maxRot;
        h2::before {
          $color1: getRandomColor();
          $colorAsHSLUV: hsluv-from-hex($color1);
          $color2: hsluv((nth($colorAsHSLUV, 1) + 80), nth($colorAsHSLUV, 2), nth($colorAsHSLUV, 3));
          background: linear-gradient((45-$rotation)+deg, $color1, $color2 70%, rgba($color2, 0) 80%);
          transform: translate(0, -40%) rotate($rotation+deg) skew(($rotation)+deg);
        }

        h2::after {
          $rotation2: $rotation * -1;
          $color1: getRandomColor();
          $colorAsHSLUV: hsluv-from-hex($color1);
          $color2: hsluv((nth($colorAsHSLUV, 1) + 80), nth($colorAsHSLUV, 2), nth($colorAsHSLUV, 3));
          background: linear-gradient((45-$rotation2)+deg, $color1, $color2 70%, rgba($color2, 0) 80%);
          transform: translate(0, -40%) rotate($rotation2+deg) skew(($rotation2)+deg);
        }
      }
    }
  }
  position: relative;
  mix-blend-mode: hard-light;
}

h3 {
  @include phone() {
    font-size: $font--size--3 * .8;
  }

  font-size: $font--size--3;
  margin-top: 0.6em;
  padding-top: 0.5em;
  border-top: .2em solid;
  margin-bottom: 0.5em;
}

h4 {
  @include phone() {
    font-size: $font--size--4 * .8;
  }

  font-size: $font--size--4;

  margin-top: 0.6em;
  padding-top: 0.7em;
  border-top: .25em solid;
  margin-bottom: 0;
}